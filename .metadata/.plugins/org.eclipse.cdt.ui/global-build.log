17:56:56 **** Clean-only build of configuration Debug for project HW2 ****
rm -rf src/Polynom.o src/polytest.d src/Polynom.d src/polytest.o HW2.exe 
Cannot run program "rm": Launching failed

Error: Program "rm" not found in PATH
PATH=[C:\mingw\bin;\bin;C:/Program Files/Java/jre1.8.0_20/bin/server;C:/Program Files/Java/jre1.8.0_20/bin;C:/Program Files/Java/jre1.8.0_20/lib/amd64;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\AMD APP\bin\x86_64;C:\Program Files (x86)\AMD APP\bin\x86;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\ATI Technologies\ATI.ACE\Core-Static;C:\Program Files (x86)\Bitvise SSH Client;C:\Program Files (x86)\WinSCP\;C:\mingw\bin;C:\MinGW\bin;C:\Eclipse]

17:56:56 **** Clean-only build of configuration Debug for project HW2 ****
17:56:58 **** Rebuild of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\polytest.o" "..\\src\\polytest.cpp" 
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
18:09:31 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
18:22:53 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:11: error: 'const class gvsu::Polynom' has no member named 'coef_expon'
     this->coef_expon.insert(1, other[x].second);
           ^
18:23:02 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:48: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(int, int) const'
     this->coeff_expon.insert(1, other[x].second);
                                                ^
..\src\Polynom.cpp:122:48: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:122:48: note:   cannot convert '1' (type 'int') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     this->coeff_expon.insert(1, other[x].second);
                                                ^
18:28:01 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:41: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(int, std::pair<float, int>) const'
     this->coeff_expon.insert(1, other[x]);
                                         ^
..\src\Polynom.cpp:122:41: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:122:41: note:   cannot convert '1' (type 'int') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     this->coeff_expon.insert(1, other[x]);
                                         ^
18:28:28 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:42: error: invalid use of 'std::pair<float, int>::pair'
     this->coeff_expon.insert(1, other[x].pair());
                                          ^
18:28:44 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:42: error: invalid use of 'std::pair<float, int>::pair'
     this->coeff_expon.insert(1, other[x].pair());
                                          ^
18:29:31 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:73: error: 'makepair' was not declared in this scope
     this->coeff_expon.insert(1, makepair(other[x].first, other[x].second);
                                                                         ^
18:29:44 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:75: error: expected ')' before ';' token
     this->coeff_expon.insert(1, make_pair(other[x].first, other[x].second);
                                                                           ^
18:29:53 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:80: error: expected ')' before ';' token
     this->coeff_expon.insert(1, std::make_pair(other[x].first, other[x].second);
                                                                                ^
18:30:06 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:80: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(int, std::pair<float, int>) const'
     this->coeff_expon.insert(1, std::make_pair(other[x].first, other[x].second));
                                                                                ^
..\src\Polynom.cpp:122:80: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:122:80: note:   cannot convert '1' (type 'int') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     this->coeff_expon.insert(1, std::make_pair(other[x].first, other[x].second));
                                                                                ^
18:30:15 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:75: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(int, std::pair<float, int>) const'
     this->coeff_expon.insert(1, make_pair(other[x].first, other[x].second));
                                                                           ^
..\src\Polynom.cpp:122:75: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from 'int' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:122:75: note:   cannot convert '1' (type 'int') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     this->coeff_expon.insert(1, make_pair(other[x].first, other[x].second));
                                                                           ^
18:34:08 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:122:93: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(std::vector<std::pair<float, int> >::const_iterator, std::pair<float, int>) const'
     this->coeff_expon.insert(coeff_expon.begin(), make_pair(other[x].first, other[x].second));
                                                                                             ^
..\src\Polynom.cpp:122:93: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from 'std::vector<std::pair<float, int> >::const_iterator {aka __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >}' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from 'std::vector<std::pair<float, int> >::const_iterator {aka __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >}' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from 'std::vector<std::pair<float, int> >::const_iterator {aka __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >}' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:122:93: note:   cannot convert '((const gvsu::Polynom*)this)->gvsu::Polynom::coeff_expon.std::vector<_Tp, _Alloc>::begin<std::pair<float, int>, std::allocator<std::pair<float, int> > >()' (type 'std::vector<std::pair<float, int> >::const_iterator {aka __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >}') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     this->coeff_expon.insert(coeff_expon.begin(), make_pair(other[x].first, other[x].second));
                                                                                             ^
18:35:57 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
18:42:23 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:134:12: error: no match for 'operator+' (operand types are 'const std::pair<float, int>' and 'const std::pair<float, int>')
     t = *t + *o;
            ^
..\src\Polynom.cpp:134:12: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_iterator.h:333:5: note: template<class _Iterator> std::reverse_iterator<_Iterator> std::operator+(typename std::reverse_iterator<_Iterator>::difference_type, const std::reverse_iterator<_Iterator>&)
     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_iterator.h:333:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   'const std::pair<float, int>' is not derived from 'const std::reverse_iterator<_Iterator>'
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_iterator.h:1118:5: note: template<class _Iterator> std::move_iterator<_Iterator> std::operator+(typename std::move_iterator<_Iterator>::difference_type, const std::move_iterator<_Iterator>&)
     operator+(typename move_iterator<_Iterator>::difference_type __n,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_iterator.h:1118:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   'const std::pair<float, int>' is not derived from 'const std::move_iterator<_Iterator>'
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2365:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2365:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   'const std::pair<float, int>' is not derived from 'const std::basic_string<_CharT, _Traits, _Alloc>'
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:53:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.tcc:692:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator+(const _CharT* __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.tcc:692:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   mismatched types 'const _CharT*' and 'std::pair<float, int>'
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:53:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.tcc:708:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator+(_CharT __lhs, const basic_string<_CharT, _Traits, _Alloc>& __rhs)
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.tcc:708:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   'const std::pair<float, int>' is not derived from 'const std::basic_string<_CharT, _Traits, _Alloc>'
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2402:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, const _CharT*)
     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2402:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   'const std::pair<float, int>' is not derived from 'const std::basic_string<_CharT, _Traits, _Alloc>'
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2418:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, _CharT)
     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2418:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   'const std::pair<float, int>' is not derived from 'const std::basic_string<_CharT, _Traits, _Alloc>'
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2430:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::basic_string<_CharT, _Traits, _Alloc>&&, const std::basic_string<_CharT, _Traits, _Alloc>&)
     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2430:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   types 'std::basic_string<_CharT, _Traits, _Alloc>' and 'const std::pair<float, int>' have incompatible cv-qualifiers
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2436:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const std::basic_string<_CharT, _Traits, _Alloc>&, std::basic_string<_CharT, _Traits, _Alloc>&&)
     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2436:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   'const std::pair<float, int>' is not derived from 'const std::basic_string<_CharT, _Traits, _Alloc>'
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2442:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::basic_string<_CharT, _Traits, _Alloc>&&, std::basic_string<_CharT, _Traits, _Alloc>&&)
     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2442:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   types 'std::basic_string<_CharT, _Traits, _Alloc>' and 'const std::pair<float, int>' have incompatible cv-qualifiers
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2454:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(const _CharT*, std::basic_string<_CharT, _Traits, _Alloc>&&)
     operator+(const _CharT* __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2454:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   mismatched types 'const _CharT*' and 'std::pair<float, int>'
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2460:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(_CharT, std::basic_string<_CharT, _Traits, _Alloc>&&)
     operator+(_CharT __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2460:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   types 'std::basic_string<_CharT, _Traits, _Alloc>' and 'const std::pair<float, int>' have incompatible cv-qualifiers
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2466:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::basic_string<_CharT, _Traits, _Alloc>&&, const _CharT*)
     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2466:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   types 'std::basic_string<_CharT, _Traits, _Alloc>' and 'const std::pair<float, int>' have incompatible cv-qualifiers
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\string:52:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\locale_classes.h:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\ios_base.h:41,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:42,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2472:5: note: template<class _CharT, class _Traits, class _Alloc> std::basic_string<_CharT, _Traits, _Alloc> std::operator+(std::basic_string<_CharT, _Traits, _Alloc>&&, _CharT)
     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\basic_string.h:2472:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:134:15: note:   types 'std::basic_string<_CharT, _Traits, _Alloc>' and 'const std::pair<float, int>' have incompatible cv-qualifiers
     t = *t + *o;
               ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:65:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_bvector.h:293:3: note: std::_Bit_iterator std::operator+(std::ptrdiff_t, const std::_Bit_iterator&)
   operator+(ptrdiff_t __n, const _Bit_iterator& __x)
   ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_bvector.h:293:3: note:   no known conversion for argument 1 from 'const std::pair<float, int>' to 'std::ptrdiff_t {aka int}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_bvector.h:379:3: note: std::_Bit_const_iterator std::operator+(std::ptrdiff_t, const std::_Bit_const_iterator&)
   operator+(ptrdiff_t __n, const _Bit_const_iterator& __x)
   ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_bvector.h:379:3: note:   no known conversion for argument 1 from 'const std::pair<float, int>' to 'std::ptrdiff_t {aka int}'
18:48:05 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:135:7: error: no match for 'operator=' (operand types are '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' and 'float')
     t = other[x].first + coeff_expon.at(a).first;
       ^
..\src\Polynom.cpp:135:7: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_algobase.h:67:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_iterator.h:708:11: note: __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >& __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >::operator=(const __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&)
     class __normal_iterator
           ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_iterator.h:708:11: note:   no known conversion for argument 1 from 'float' to 'const __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_iterator.h:708:11: note: __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >& __gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >::operator=(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&&)
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_iterator.h:708:11: note:   no known conversion for argument 1 from 'float' to '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&&'
18:48:24 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:135:8: error: no match for 'operator=' (operand types are 'const std::pair<float, int>' and 'float')
     *t = other[x].first + coeff_expon.at(a).first;
        ^
..\src\Polynom.cpp:135:8: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:158:7: note: std::pair<_T1, _T2>& std::pair<_T1, _T2>::operator=(const std::pair<_T1, _T2>&) [with _T1 = float; _T2 = int]
       operator=(const pair& __p)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:158:7: note:   no known conversion for argument 1 from 'float' to 'const std::pair<float, int>&'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:166:7: note: std::pair<_T1, _T2>& std::pair<_T1, _T2>::operator=(std::pair<_T1, _T2>&&) [with _T1 = float; _T2 = int]
       operator=(pair&& __p)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:166:7: note:   no known conversion for argument 1 from 'float' to 'std::pair<float, int>&&'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:177:2: note: template<class _U1, class _U2> std::pair<_T1, _T2>& std::pair<_T1, _T2>::operator=(const std::pair<_U1, _U2>&) [with _U1 = _U1; _U2 = _U2; _T1 = float; _T2 = int]
  operator=(const pair<_U1, _U2>& __p)
  ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:177:2: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:8: note:   mismatched types 'const std::pair<_T1, _T2>' and 'float'
     *t = other[x].first + coeff_expon.at(a).first;
        ^
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:186:2: note: template<class _U1, class _U2> std::pair<_T1, _T2>& std::pair<_T1, _T2>::operator=(std::pair<_U1, _U2>&&) [with _U1 = _U1; _U2 = _U2; _T1 = float; _T2 = int]
  operator=(pair<_U1, _U2>&& __p)
  ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:186:2: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:8: note:   mismatched types 'std::pair<_T1, _T2>' and 'float'
     *t = other[x].first + coeff_expon.at(a).first;
        ^
18:49:58 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:135:67: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, float) const'
     coeff_expon.insert(t, other[x].first + coeff_expon.at(a).first);
                                                                   ^
..\src\Polynom.cpp:135:67: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:67: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, other[x].first + coeff_expon.at(a).first);
                                                                   ^
18:51:51 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:135:68: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(const std::pair<float, int>&, float) const'
     coeff_expon.insert(*t, other[x].first + coeff_expon.at(a).first);
                                                                    ^
..\src\Polynom.cpp:135:68: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from 'const std::pair<float, int>' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from 'const std::pair<float, int>' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from 'const std::pair<float, int>' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:68: note:   cannot convert 't.__gnu_cxx::__normal_iterator<_Iterator, _Container>::operator*<const std::pair<float, int>*, std::vector<std::pair<float, int> > >()' (type 'const std::pair<float, int>') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(*t, other[x].first + coeff_expon.at(a).first);
                                                                    ^
18:52:20 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:135:78: error: no matching function for call to 'make_pair(float)'
     coeff_expon.insert(*t, make_pair(other[x].first + coeff_expon.at(a).first), coeff_expon.at(a).second);
                                                                              ^
..\src\Polynom.cpp:135:78: note: candidate is:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_algobase.h:64:0,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\char_traits.h:39,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ios:40,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\ostream:38,
                 from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\iostream:39,
                 from ..\src\Polynom.h:8,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:276:5: note: template<class _T1, class _T2> constexpr std::pair<typename std::__decay_and_strip<_Tp>::__type, typename std::__decay_and_strip<_T2>::__type> std::make_pair(_T1&&, _T2&&)
     make_pair(_T1&& __x, _T2&& __y)
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_pair.h:276:5: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:78: note:   candidate expects 2 arguments, 1 provided
     coeff_expon.insert(*t, make_pair(other[x].first + coeff_expon.at(a).first), coeff_expon.at(a).second);
                                                                              ^
18:52:40 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:135:104: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                        ^
..\src\Polynom.cpp:135:104: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:104: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                        ^
18:52:55 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:135:109: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:135:109: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:109: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
18:53:15 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:11: error: missing template arguments before 'c'
  iterator c = coef.begin();
           ^
..\src\Polynom.cpp:105:11: error: expected ';' before 'c'
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:114:5: error: 'c' was not declared in this scope
     c.push_back(2.0);
     ^
..\src\Polynom.cpp:122:30: error: 'c' was not declared in this scope
     this->coeff_expon.insert(c,
                              ^
..\src\Polynom.cpp:135:109: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:135:109: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:109: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
18:58:51 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:137:34: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
         coeff_expon.at(a).second));
                                  ^
..\src\Polynom.cpp:137:34: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:137:34: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
         coeff_expon.at(a).second));
                                  ^
18:59:11 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:16: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto c = coef.begin();
                ^
..\src\Polynom.cpp:106:15: error: request for member 'begin' in 'exp', which is of non-class type 'std::vector<int> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  auto e = exp.begin();
               ^
..\src\Polynom.cpp:135:109: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:135:109: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:109: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
19:02:38 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:114:5: error: 'c' was not declared in this scope
     c.push_back(2.0);
     ^
..\src\Polynom.cpp:116:5: error: 'e' was not declared in this scope
     e.push_back(1);
     ^
..\src\Polynom.cpp:135:109: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:135:109: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:109: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
19:02:47 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:117:5: error: 'e' was not declared in this scope
     e++;
     ^
..\src\Polynom.cpp:118:5: error: 'c' was not declared in this scope
     c++;
     ^
..\src\Polynom.cpp:135:109: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:135:109: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:109: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
19:02:52 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:135:109: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:135:109: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:109: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
19:09:07 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:105:40: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  std::vector<float>::iterator c = coef.begin();
                                        ^
..\src\Polynom.cpp:135:109: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:135:109: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:109: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:136:16: error: 'const class std::vector<std::pair<float, int> >' has no member named 'in'
    coeff_expon.in
                ^
..\src\Polynom.cpp:137:3: error: expected ';' before '}' token
   }
   ^
19:09:33 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:135:109: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:135:109: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:135:109: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:136:16: error: 'const class std::vector<std::pair<float, int> >' has no member named 'in'
    coeff_expon.in
                ^
..\src\Polynom.cpp:137:3: error: expected ';' before '}' token
   }
   ^
19:10:42 **** Incremental Build of configuration Debug for project HW2 ****
Info: Internal Builder is used for build
g++ "-IC:\\MinGW\\lib\\gcc\\mingw32\\4.8.1\\include" -O0 -g3 -Wall -c -std=c++11 -fmessage-length=0 -o "src\\Polynom.o" "..\\src\\Polynom.cpp" 
..\src\Polynom.cpp: In member function 'gvsu::Polynom gvsu::Polynom::operator+(const gvsu::Polynom&) const':
..\src\Polynom.cpp:106:24: error: request for member 'begin' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  for (auto iter = coef.begin(); iter < coef.end(); iter++){
                        ^
..\src\Polynom.cpp:106:45: error: request for member 'end' in 'coef', which is of non-class type 'std::vector<float> [(((sizetype)(((ssizetype)max) + -1)) + 1)]'
  for (auto iter = coef.begin(); iter < coef.end(); iter++){
                                             ^
..\src\Polynom.cpp:138:109: error: no matching function for call to 'std::vector<std::pair<float, int> >::insert(__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >&, std::pair<float, int>) const'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:138:109: note: candidates are:
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:69:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
     vector<_Tp, _Alloc>::
     ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\vector.tcc:107:5: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
In file included from c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\vector:64:0,
                 from ..\src\Polynom.h:9,
                 from ..\src\Polynom.cpp:6:
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note: std::vector<_Tp, _Alloc>::iterator std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::value_type&&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, value_type&& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:988:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::initializer_list<_Tp>) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*]
       insert(iterator __position, initializer_list<value_type> __l)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1005:7: note:   no known conversion for argument 1 from '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >' to 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note: void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, std::vector<_Tp, _Alloc>::size_type, const value_type&) [with _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >; std::vector<_Tp, _Alloc>::iterator = __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >; typename std::_Vector_base<_Tp, _Alloc>::pointer = std::pair<float, int>*; std::vector<_Tp, _Alloc>::size_type = unsigned int; std::vector<_Tp, _Alloc>::value_type = std::pair<float, int>]
       insert(iterator __position, size_type __n, const value_type& __x)
       ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1023:7: note:   candidate expects 3 arguments, 2 provided
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note: template<class _InputIterator, class> void std::vector<_Tp, _Alloc>::insert(std::vector<_Tp, _Alloc>::iterator, _InputIterator, _InputIterator) [with _InputIterator = _InputIterator; <template-parameter-2-2> = <template-parameter-1-2>; _Tp = std::pair<float, int>; _Alloc = std::allocator<std::pair<float, int> >]
         insert(iterator __position, _InputIterator __first,
         ^
c:\mingw\lib\gcc\mingw32\4.8.1\include\c++\bits\stl_vector.h:1044:9: note:   template argument deduction/substitution failed:
..\src\Polynom.cpp:138:109: note:   cannot convert 't' (type '__gnu_cxx::__normal_iterator<const std::pair<float, int>*, std::vector<std::pair<float, int> > >') to type 'std::vector<std::pair<float, int> >::iterator {aka __gnu_cxx::__normal_iterator<std::pair<float, int>*, std::vector<std::pair<float, int> > >}'
     coeff_expon.insert(t, std::make_pair(other[x].first + coeff_expon.at(a).first, coeff_expon.at(a).second));
                                                                                                             ^
..\src\Polynom.cpp:139:16: error: 'const class std::vector<std::pair<float, int> >' has no member named 'in'
    coeff_expon.in
                ^
..\src\Polynom.cpp:140:3: error: expected ';' before '}' token
   }
   ^
